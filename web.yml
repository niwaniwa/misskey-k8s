apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: misskey
spec:
  type: ClusterIP
  selector:
    app: web
  ports:
  - name: http
    port: 3000

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: misskey-web-files-pvc
  namespace: misskey
spec:
  storageClassName: rook-ceph-block
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: web-deployment
  namespace: misskey
  labels:
    deploy: web
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "75%"
      maxSurge: "50%"
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
      containers:
      - name: web
        image: ghcr.io/niri-la/misskey.niri.la:develop
        volumeMounts:
        - mountPath: /misskey/files
          name: misskey-files
        - mountPath: /misskey/files/.config # ConfigMapのファイルをマウントするパス
          name: misskey-default-conf-file # ConfigMapから作成したボリューム
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: "2"
        # Podの準備が出来ているか確認用
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
      volumes:
      - name: misskey-files
        persistentVolumeClaim:
          claimName: misskey-web-files-pvc
      - name: misskey-default-conf-file
        persistentVolumeClaim:
          claimName: misskey-web-files-pvc
        configMap:
          name: misskey-default-config

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ingress
  namespace: misskey
spec:
  ingressClassName: nginx
  rules:
    - host: misskey.niri.la
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: web
                port:
                  number: 80
            path: /
    # tls:
    #   - hosts:
    #     - www.example.com
    #     secretName: example-tls