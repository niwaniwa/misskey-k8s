apiVersion: v1
kind: Service
metadata:
  name: web-service
  namespace: misskey
spec:
#  type: ClusterIP
  selector:
    app: web #-deployment
  clusterIP: None
  ports:
  - name: http
    port: 80
    targetPort: 3000
#    nodePort: 300080
#    protocol: TCP

#---
#
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: misskey-web-files-pvc
#  namespace: misskey
#spec:
#  storageClassName: rook-ceph-block
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 20Gi

---

kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: web-deployment
  namespace: misskey
  labels:
    deploy: web
spec:
  replicas: 3
#  strategy:
#    type: RollingUpdate
#    rollingUpdate:
#      maxUnavailable: "75%"
#      maxSurge: "50%"
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: web
        image: ghcr.io/niri-la/misskey.niri.la:v13.13.2-kinel
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /misskey/files
          name: misskey-files
        - mountPath: /misskey/.config
          name: misskey-default-conf-file
        ports:
        - containerPort: 3000
#        resources:
#          limits:
#            cpu: "2"
        # Podの準備が出来ているか確認用
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
      volumes:
#      - name: misskey-files
#        persistentVolumeClaim:
#          claimName: misskey-data
      - name: misskey-default-conf-file
        configMap:
          name: misskey-default-config
  volumeClaimTemplates:
  - metadata:
      name: misskey-files
      namespace: misskey
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: rook-ceph-block
      resources:
        requests:
          storage: 5Gi
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ingress
  namespace: misskey
  annotations:
     nginx.ingress.kubernetes.io/proxy-body-size: 200m
#     nginx.ingress.kubernetes.io/real-ip-header: "X-Real-IP"
     nginx.ingress.kubernetes.io/real-ip-header: "CF-Connecting-IP"
     nginx.ingress.kubernetes.io/set-forwarded-for: "true"
     nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
#    kubernetes.io/ingress.class: "nginx"
#    kubernetes.io/tls-acme: "true"
#    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#    cert-manager.io/issuer: "letsencrypt-staging" 
spec:
  ingressClassName: nginx
  rules:
    - host: misskey.niri.la
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: web-service
                port:
                  number: 80
            path: /
#  tls:
#    - hosts:
#        - mi-dev.niri.la
#      secretName: "missker-test-cert"
 # tls:
 # - hosts:
 #    - www.example.com
 #    secretName: example-tls

